#summary 中文版API

*!ActivityResultFacade*
 * [#setResultBoolean setResultBoolean]
 * [#setResultBooleanArray setResultBooleanArray]
 * [#setResultByte setResultByte]
 * [#setResultByteArray setResultByteArray]
 * [#setResultChar setResultChar]
 * [#setResultCharArray setResultCharArray]
 * [#setResultDouble setResultDouble]
 * [#setResultDoubleArray setResultDoubleArray]
 * [#setResultFloat setResultFloat]
 * [#setResultFloatArray setResultFloatArray]
 * [#setResultInteger setResultInteger]
 * [#setResultIntegerArray setResultIntegerArray]
 * [#setResultLong setResultLong]
 * [#setResultLongArray setResultLongArray]
 * [#setResultSerializable setResultSerializable]
 * [#setResultShort setResultShort]
 * [#setResultShortArray setResultShortArray]
 * [#setResultString setResultString]
 * [#setResultStringArray setResultStringArray]
*!AlarmManagerFacade*
 * [#cancelRepeating cancelRepeating]
 * [#scheduleAbsolute scheduleAbsolute]
 * [#scheduleInexactRepeating scheduleInexactRepeating]
 * [#scheduleRelative scheduleRelative]
 * [#scheduleRepeating scheduleRepeating]
*!BatteryManagerFacade*
  * [#batteryCheckPresent batteryCheckPresent]
  * [#batteryGetHealth batteryGetHealth]
*!UiFacade*
  * [#addContextMenuItem addContextMenuItem]
  * [#addOptionsMenuItem addOptionsMenuItem]


===,,setResultBoolean,,===
设置脚本被startActivityForResult()方法调用后返回的布尔值:
{{{
setResultBoolean(
 Integer resultCode:回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Boolean resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultBooleanArray,,===
设置脚本被startActivityForResult()方法调用后返回的布尔值数组:
{{{
setResultBoolean(
 Integer resultCode:回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Boolean[] resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultByte,,===
设置脚本被startActivityForResult()方法调用后返回的字节:
{{{
setResultByte(
 Integer resultCode:回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Byte resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultByteArray,,===
设置脚本被startActivityForResult()方法调用后返回的字节数组:
{{{
setResultByteArray(
 Integer resultCode:回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Byte[] resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultChar,,===
设置脚本被startActivityForResult()方法调用后返回的字符:
{{{
setResultChar(
 Integer resultCode:回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Character resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultCharArray,,===
设置脚本被startActivityForResult()方法调用后返回的字符数组:
{{{
setResultCharArray(
 Integer resultCode:回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Character[] resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultDouble,,===
设置脚本被startActivityForResult()方法调用后返回的的双精度浮点数值:
{{{
setResultDouble(
 Integer resultCode:回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Double resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultDoubleArray,,===
设置脚本被startActivityForResult()方法调用后返回的双精度浮点数值数组:
{{{
setResultDoubleArray(
 Integer resultCode:回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Double[] resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultFloat,,===
设置脚本被startActivityForResult()方法调用后返回的的单精度浮点数值:
{{{
setResultFloat(
 Integer resultCode: 回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Float resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultFloatArray,,===
设置脚本被startActivityForResult()方法调用后返回的单精度浮点型数组:
{{{
setResultFloatArray(
 Integer resultCode: 回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Float[] resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultInteger,,===
设置脚本被startActivityForResult()方法调用后返回的整数:
{{{
setResultInteger(
 Integer resultCode: 回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Integer resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultIntegerArray,,===
设置脚本被startActivityForResult()方法调用后返回的整型数组:
{{{
setResultIntegerArray(
 Integer resultCode: 回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Integer[] resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultLong,,===
设置脚本被startActivityForResult()方法调用后返回的长整数:
{{{
setResultLong(
 Integer resultCode: 回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Long resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultLongArray,,===
设置脚本被startActivityForResult()方法调用后返回的长整型数组:
{{{
setResultLongArray(
 Integer resultCode: 回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Long[] resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultSerializable,,===
设置脚本被startActivityForResult()方法调用后返回的可串行化的结果(Serializable):
{{{
setResultSerializable(
 Integer resultCode: 回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Serializable resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultShort,,===
设置脚本被startActivityForResult()方法调用后返回的短整数:
{{{
setResultShort(
 Integer resultCode:: 回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Short resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultShortArray,,===
设置脚本被startActivityForResult()方法调用后返回的短整型数组:
{{{
setResultShortArray(
 Integer resultCode:: 回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 Short[] resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultString,,===
设置脚本被startActivityForResult()方法调用后返回的字符串:
{{{
setResultString(
 Integer resultCode: 回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 String resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,setResultStringArray,,===
设置脚本被startActivityForResult()方法调用后返回的字符串数组:
{{{
setResultStringArray(
 Integer resultCode: 回传给原始activity的结果编码, 
常常是RESULT_CANCELED(0) 或者 RESULT_OK(-1),
 String[] resultValue)

设置脚本执行的结果.每当脚本程序被startActivityForResult()
方法调用时,由此产生的intent将会包含SCRIPT_RESULT和给定的值.
}}}

===,,cancelRepeating,,===
取消脚本的定时执行计划:
{{{
cancelRepeating(
 String script)

取消给定脚本所有的定时(重复)执行计划
}}}

===,,scheduleAbsolute,,===
定时执行传入的脚本，从开机后开始计时：
{{{
scheduleAbsolute(
 String script: 要执行的脚本,
 Double time: 脚本延迟执行时间, 开机(epoch?)后延迟一定时间执行脚本,延迟的时间由此参数指定
 Boolean wakeup[optional, default true]: 是否唤醒处于黑屏状态的移动设备)

定时执行传入的脚本,从开机后开始计时
}}}

===,,scheduleInexactRepeating,,===
每隔一段端时间执行一次脚本（时间间隔不太精确）
{{{
scheduleInexactRepeating(
 Double interval: 两次执行之间的时间间隔,以秒为单位
 String script: 要执行的脚本,
 Boolean wakeup[optional, default true]: 是否唤醒处于黑屏状态的移动设备)

从脚本被调用开始,每隔一段时间执行一次脚本(不是很精确),但是比scheduleRepeating方法省电
}}}

===,,scheduleRelative,,===
定时执行脚本,延迟时间从方法被调用时开始计算
{{{
scheduleRelative(
 String script: 要执行的脚本,
 Double secondsFromNow: 从现在起,延迟一定时间执行脚本,延迟时间由此参数指定
 Boolean wakeup[optional, default true]: 是否唤醒处于黑屏状态的移动设备)

从脚本被调用开始，延迟数秒钟后执行脚
}}}

===,,scheduleRepeating,,===
每隔一段时间执行一次脚本（精确）
{{{
scheduleRepeating(
 Double interval: 两次执行之间的时间间隔,以秒为单位
 String script: 要执行的脚本,
 Double firstExecutionTime[optional]: 第一次执行脚本所需要延迟的时间,从开机(epoch?)开始计算
 Boolean wakeup[optional, default true]:是否唤醒处于黑屏状态的移动设备)

每隔一段时间执行一次脚本,从开机开始计算
}}}

===,,addContextMenuItem,,===
添加上下文菜单项:
{{{
addContextMenuItem(
 String label: 菜单项上显示的文字,
 String event: 点击菜单项时触发的事件,
 Object eventData[可选])

向上下文菜单中添加一个选项
}}}

===,,addOptionsMenuItem,,===
添加选择菜单:
{{{
addOptionsMenuItem(
 String label: 菜单项上显示的文字,
 String event: 点击菜单项时触发的事件,
 Object eventData[可选],
 String iconName[optional]: Android 系统自带的菜单图标                   
详细信息请查看:http://developer.android.com/reference/android/R.drawable.html)

为选择菜单添加一个选项
}}}

===,,batteryCheckPresent,,===
查看电池电量信息:
{{{
batteryCheckPresent()

返回当前的电池电量信息
需要 API Level 5.
}}}

===,,batteryGetHealth,,===
查看电池健康状态:
{{{
batteryGetHealth()

返回当前的电池健康状态信息:
1 - 未知;
2 - 良好;
3 - 过热;
4 - 不可用;
5 - 电量过饱;
6 - 查询失败;
}}}